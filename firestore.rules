rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Links collection - users can only access their own links
    match /links/{linkId} {
      allow read, write: if request.auth != null && 
        (resource.data.created_by == request.auth.uid || 
         request.auth.token.email_verified == true);
      allow create: if request.auth != null && 
        request.auth.token.email_verified == true;
      allow delete: if request.auth != null && 
        resource.data.created_by == request.auth.uid;
    }
    
    // Analytics collection - users can only access their own analytics
    match /analytics/{analyticsId} {
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null;
    }
    
    // Blog posts - public read, admin write
    match /blog/{postId} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && 
        request.auth.token.email_verified == true;
    }
    
    // Comments - public read, authenticated write
    match /comments/{commentId} {
      allow read: if true; // Public read access
      allow create: if request.auth != null && 
        request.auth.token.email_verified == true;
      allow update, delete: if request.auth != null && 
        (resource.data.user_id == request.auth.uid || 
         request.auth.token.email_verified == true);
    }
    
    // URL redirects - public read access for redirects
    match /redirects/{shortCode} {
      allow read: if true; // Public read for redirects
      allow write: if request.auth != null && 
        request.auth.token.email_verified == true;
    }
  }
} 